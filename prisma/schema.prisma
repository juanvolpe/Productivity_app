generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          String           @id @default(cuid())
  title       String
  duration    Int
  isCompleted Boolean          @default(false)
  order       Int
  playlistId  String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  playlist    Playlist         @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  completions TaskCompletion[]

  @@index([playlistId])
}

model Playlist {
  id          String               @id @default(cuid())
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  friday      Boolean              @default(false)
  monday      Boolean              @default(false)
  name        String
  saturday    Boolean              @default(false)
  sunday      Boolean              @default(false)
  thursday    Boolean              @default(false)
  tuesday     Boolean              @default(false)
  wednesday   Boolean              @default(false)
  completions PlaylistCompletion[]
  tasks       Task[]
}

model TaskCompletion {
  id        String   @id @default(cuid())
  taskId    String
  date      DateTime @db.Date
  createdAt DateTime @default(now())
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@unique([taskId, date])
}

model PlaylistCompletion {
  id         String   @id @default(cuid())
  playlistId String
  date       DateTime @db.Date
  createdAt  DateTime @default(now())
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)

  @@unique([playlistId, date])
  @@index([playlistId])
}
